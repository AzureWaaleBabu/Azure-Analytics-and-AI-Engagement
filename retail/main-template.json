{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "environment_code":{
         "type":"String",
         "metadata":{
            "description":"Suffix added to all resource name to make them unique. Should consist of only lower case alphabet and numbers. Total length should be less than 6 characters."
         }
      },
      "sql_administrator_login_password":{
         "type":"SecureString",
         "metadata":{
            "description":"Password for SQL Admin. Should have atleast one capital, one small alphapbet with one digit and one special character.Password should be at least 8 characters long."
         }
      },
      "pbi_workspace_id":{
         "type":"String",
         "metadata":{
            "description":"PowerBi workspace Id."
         }
      },
      "occupancy_data_Realtime_URL":{
         "type":"String",
         "metadata":{
            "description":"PowerBi streaming dataset URL for ADX data occupancy Realtime."
         }
      },
	   "thermostat_telemetry_Realtime_URL":{
         "type":"String",
         "metadata":{
            "description":"PowerBi streaming dataset URL for ADX data thermostat Realtime."
         }
      },
	   "livestreaming_video_analytics_Realtime_URL":{
         "type":"String",
         "metadata":{
            "description":"PowerBi streaming dataset URL for Livestreaming Video Analytics Realtime."
         }
      },
    "video_indexer_account_id": {
         "type": "String",
         "metadata": {
         "description": "Video indexer account ID."
         }
      },
    "video_indexer_api_key": {
         "type": "String",
         "metadata": {
         "description": "Video indexer API key."
         }
      }
   },
   "variables":{
      "resource_group_name":"[resourceGroup().name]",
      "subscriptionid":"[subscription().subscriptionId]",
      "unique_suffix":"[concat(uniqueString(deployment().name), '-', parameters('environment_code'))]",
      "location":"[resourceGroup().location]",
      "key_vault_name":"[concat('kv-',variables('unique_suffix'))]",
      "storage_account_name":"[if(greater(length(concat('stretail', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('stretail',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('stretail',parameters('environment_code'),uniqueString(deployment().name)) )]",
      "workspace_name_synapseretail":"[concat('synapseretail',parameters('environment_code'),uniqueString(deployment().name))]",
      "default_data_lake_storage_file_system_name":"retail-data",
      "default_data_lake_storage_account_url":"[concat('https://', variables('storage_account_name'), '.dfs.core.windows.net')]",
      "sql_compute_name":"RetailDW",
      "sql_administrator_login_id":"labsqladmin",
      "spark_compute_name":"Retail",
      "sql_server_sku":"DW100c",
      "spark_auto_scale_enabled":"true",
      "spark_min_node_count":"3",
      "spark_max_node_count":"20",
      "spark_node_count":"1",
      "spark_node_size_family":"MemoryOptimized",
      "spark_node_size":"Large",
      "spark_auto_pause_enabled":"true",
      "spark_auto_pause_delay_in_minutes":"5",
      "spark_version":"2.4",
      "forms_retail_name":"[concat('retail-form-recognizer-',variables('unique_suffix'))]",
      "accounts_qnamaker_name":"[concat('qnamaker-',variables('unique_suffix'))]",
      "app_retail_qna_name":"[concat('qnamaker-app-',variables('unique_suffix'))]",
      "serverfarms_app_retail_qna_name":"[concat('asp-qnamaker-',variables('unique_suffix'))]",
      "iot_hub_name":"[concat('iothub-retail-',variables('unique_suffix'))]",
      "eventhub_evh_namespace_retail_name":"[concat('evh-namespace-',variables('unique_suffix'))]",
      "asa_name_retail":"[concat('retailasa-',variables('unique_suffix'))]",
      "asa_query_retail":"SELECT [RecordedOn],[before-foottraffic],[after-foottraffic],[EventProcessedUtcTime],[PartitionId],[EventEnqueuedUtcTime] INTO  [adlsgen2-iothub-output] FROM  [iot-foottraffic-hub]",
      "accounts_transqna_retail_name":"[concat('transqna-retail-',variables('unique_suffix'))]",
      "app_retaildemo_name":"[concat('retaildemo-app-',variables('unique_suffix'))]",
      "serverfarms_app_retaildemo_name":"[concat('asp-retaildemo-app-',variables('unique_suffix'))]",
      "sites_adx_thermostat_realtime_name":"[concat('app-realtime-kpi-retail-',variables('unique_suffix'))]",
      "serverfarm_adx_thermostat_realtime_name":"[concat('asp-realtime-kpi-retail-',variables('unique_suffix'))]",
      "sites_app_iotfoottraffic_sensor_retail_name":"[concat('iot-foottraffic-sensor-retail-app-',variables('unique_suffix'))]",
      "serverfarm_app_iotfoottraffic_sensor_retail_name":"[concat('asp-iot-foottraffic-sensor-retail-',variables('unique_suffix'))]",
      "sites_retail_mediasearch_app_name":"[concat('app-media-search-',variables('unique_suffix'))]",
      "serverfarm_retail_mediasearch_app_name":"[concat('asp-mediasearch-retail-',variables('unique_suffix'))]",
      "accounts_purview_retail_name":"[concat('purviewretail',variables('unique_suffix'))]",
      "search_srch_retail_name":"[concat('srch-retail-product-',variables('unique_suffix'))]",
      "search_retail_qna_name":"[concat('srch-retail-qna-',variables('unique_suffix'))]",
      "mediaservices_name":"[concat('mediasvc',uniqueString(deployment().name))]",
      "cosmosdb_retail2_name":"[if(greater(length(concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code'))), 43), substring(concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code')),0,43) , concat('cosmosdb-retail2-', uniqueString(deployment().name),parameters('environment_code')) )]",
      "cosmos_database_name":"retail-foottraffic",
      "cosmos_database_video_indexer":"video-indexer",
	   "cosmos_database_name_retailinventorydb":"retailinventorydb",
      "cosmos_database_container_name_videoindexerinsights": "videoindexerinsights",
      "incident_search_retail_name": "[concat('incident-srch-retail-',variables('unique_suffix'))]",
      "cosmos_database_container_name_Transcript": "transcript",
      "source_storage_container": "media-assets",
      "accounts_cogretail_name":"[concat('cogretail-',variables('unique_suffix'))]",
      "accounts_RetailMedia_name":"[concat('retailmedia-',variables('unique_suffix'))]",
      "accounts_retailspeechapp_prod_name":"[concat('retailspeechapp-',variables('unique_suffix'))]",
      "workflows_logic_storage_trigger_name": "[concat('logic-app-storage-trigger-',variables('unique_suffix'))]",
      "workflows_logic_video_indexer_trigger_name": "[concat('logic-app-video-trigger-',variables('unique_suffix'))]",
      "logic_app_storage_trigger_url": "[concat(resourceId('Microsoft.Logic/workflows/', variables('workflows_logic_storage_trigger_name')), '/triggers/manual')]",
      "logic_app_indexer_trigger_url": "[concat(resourceId('Microsoft.Logic/workflows/', variables('workflows_logic_video_indexer_trigger_name')), '/triggers/manual')]",
      "connections_azureblob_name": "[concat('conn-azureblob-',variables('unique_suffix'))]",
      "connections_cosmosdb_name": "[concat('conn-documentdb-',variables('unique_suffix'))]",
      "logic_app_concatfunc": "[concat('concat(decodeUriComponent(''https%3A%2F%2Fapi.videoindexer.ai%2Ftrial%2FAccounts%2F',parameters('video_indexer_account_id'),'%2FVideos%2F''), triggerOutputs()[''queries''][''id''], decodeUriComponent(''%2FIndex''))')]",
      "event_topic_media_indexer_name":"[concat('event-topic-media-indexer-',variables('unique_suffix'))]",
      "event_topic_storage_trigger_name": "[concat('event-topic-storage-trigger-',variables('unique_suffix'))]",
      "func_media_recommendation_service_asp_name": "[concat('func-asp-media-recommendation-',variables('unique_suffix'))]",
      "func_media_recommendation_service_ai_name": "[concat('func-ai-media-recommendation-',variables('unique_suffix'))]",
      "func_media_recommendation_service_storage_name": "[if(greater(length(concat('strecservice', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('strecservice',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('strecservice',parameters('environment_code'),uniqueString(deployment().name)) )]",
      "func_media_recommendation_service_app_name": "[concat('func-app-media-recommendation-',variables('unique_suffix'))]",
      "func_model_builder_service_asp_name": "[concat('func-asp-model-builder-',variables('unique_suffix'))]",
      "func_model_builder_service_ai_name": "[concat('func-ai-model-builder-',variables('unique_suffix'))]",
      "func_model_builder_service_storage_name": "[if(greater(length(concat('stmodelbuilder', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('stvideorec',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('stvideorec',parameters('environment_code'),uniqueString(deployment().name)) )]",
      "func_model_builder_service_app_name": "[concat('func-app-model-builder-',variables('unique_suffix'))]",
      "func_media_transcript_app_name": "[concat('func-app-media-transcript-',variables('unique_suffix'))]",
      "func_media_transcript_asp_name": "[concat('func-asp-media-transcript-',variables('unique_suffix'))]",
      "func_media_transcript_storage_name": "[if(greater(length(concat('sttranscript', parameters('environment_code'),uniqueString(deployment().name))), 24), substring(concat('sttranscript',parameters('environment_code'),uniqueString(deployment().name)),0,24) , concat('stmongodata',parameters('environment_code'),uniqueString(deployment().name)) )]"  ,
	   "namespaces_adx_thermostat_occupancy_name": "[concat('adx-thermostat-occupancy-',variables('unique_suffix'))]",
	   "iothub_foottraffic":"[concat('iothub-foottraffic-',variables('unique_suffix'))]",
	   "func_livestreaming_video_analytics_asp_name": "[concat('func-asp-livestreaming-',variables('unique_suffix'))]",
	   "func_livestreaming_video_analytics_name":"[concat('func-app-livestreaming-',variables('unique_suffix'))]",
	   "func_product_search_asp_name": "[concat('func-asp-product-search-',variables('unique_suffix'))]",
	   "sites_product_search_ui_app_name":"[concat('app-product-search-ui-',variables('unique_suffix'))]",
      "serverfarm_product_search_ui_app_name":"[concat('asp-productsearch-ui-',variables('unique_suffix'))]"
   },
   "resources":[
      {
         "name":"default",
         "type":"Microsoft.Resources/tags",
         "apiVersion":"2019-10-01",
         "properties":{
            "tags":{
               "DeploymentId":"[parameters('environment_code')]",
               "UniqueId":"[uniqueString(deployment().name)]",
		"owner" : "anuj",
               "WsId":"[parameters('pbi_workspace_id')]",
               "occupancy_data_Realtime_URL":"[parameters('occupancy_data_Realtime_URL')]",
			      "thermostat_telemetry_Realtime_URL":"[parameters('thermostat_telemetry_Realtime_URL')]",
               "VideoIndexerAccountId": "[parameters('video_indexer_account_id')]",
               "VideoIndexerApiKey": "[parameters('video_indexer_api_key')]"
            }
         }
      },
      {
         "name": "[variables('connections_cosmosdb_name')]",
         "type": "Microsoft.Web/connections",
         "apiVersion": "2016-06-01",
         "location": "[variables('location')]",
         "kind": "V1",
         "dependsOn": [
         "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties": {
         "displayName": "documentdb",
         "parameterValues": {
            "databaseAccount": "[variables('cosmosdb_retail2_name')]",
            "accessKey": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey]"
         },
         "api": {
            "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/documentdb')]"
         }
         }
      },
      {
         "name": "[concat(variables('cosmosdb_retail2_name'), '/', toLower(variables('cosmos_database_video_indexer')))]",
         "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion": "2019-12-12",
         "dependsOn": [
         "[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmosdb_retail2_name')))]"
         ],
         "properties": {
         "resource": {
            "id": "[variables('cosmos_database_video_indexer')]"
         }
         }
      },
      {
         "name": "[concat(variables('cosmosdb_retail2_name'), '/', variables('cosmos_database_video_indexer'), '/', variables('cosmos_database_container_name_videoindexerinsights'))]",
         "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion": "2020-04-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmosdb_retail2_name'),variables('cosmos_database_video_indexer'))]"
         ],
         "properties": {
         "resource": {
            "id": "[variables('cosmos_database_container_name_videoindexerinsights')]",
            "indexingPolicy": {
               "automatic": true,
               "indexingMode": "consistent",
               "includedPaths": [
               {
                  "path": "/*"
               }
               ],
               "excludedPaths": [
               {
                  "path": "/\"_etag\"/?"
               }
               ]
            },
            "partitionKey": {
               "paths": [
               "/id"
               ],
               "kind": "Hash"
            },
            "analyticalStorageTtl": -1,
            "conflictResolutionPolicy": {
               "mode": "LastWriterWins",
               "conflictResolutionPath": "/_ts"
            }
         },
         "options": {
            "autoscaleSettings": {
               "maxThroughput": "4000"
            }
         }
         }
      },
      {
      "name": "[concat(variables('cosmosdb_retail2_name'), '/', variables('cosmos_database_video_indexer'), '/', variables('cosmos_database_container_name_Transcript'))]",
         "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion": "2020-04-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmosdb_retail2_name'),variables('cosmos_database_video_indexer'))]"
         ],
         "properties": {
         "resource": {
            "id": "[variables('cosmos_database_container_name_Transcript')]",
            "indexingPolicy": {
               "automatic": true,
               "indexingMode": "consistent",
               "includedPaths": [
               {
                  "path": "/*"
               }
               ],
               "excludedPaths": [
               {
                  "path": "/\"_etag\"/?"
               }
               ]
            },
            "partitionKey": {
               "paths": [
               "/videoid"
               ],
               "kind": "Hash"
            },
            "analyticalStorageTtl": -1,
            "conflictResolutionPolicy": {
               "mode": "LastWriterWins",
               "conflictResolutionPath": "/_ts"
            }
         },
         "options": {
            "autoscaleSettings": {
               "maxThroughput": "4000"
            }
         }
         }
      },
      {
         "type":"Microsoft.CognitiveServices/accounts",
         "apiVersion":"2021-10-01",
         "name":"[variables('accounts_retailspeechapp_prod_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"S0"
         },
         "kind":"SpeechServices",
         "identity":{
            "type":"None",
            "userAssignedIdentities":{
               
            }
         },
         "properties":{
            "networkAcls":{
               "defaultAction":"Allow",
               "virtualNetworkRules":[
                  
               ],
               "ipRules":[
                  
               ]
            },
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "type":"Microsoft.Purview/accounts",
         "apiVersion":"2021-07-01",
         "name":"[variables('accounts_purview_retail_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard",
            "capacity":1
         },
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "cloudConnectors":{
               
            },
            "publicNetworkAccess":"Enabled",
            "managedResourceGroupName":"managed-rg-purviewretailrebdemo"
         }
      },
      {
         "type":"Microsoft.Media/mediaservices",
         "apiVersion":"2018-07-01",
         "name":"[variables('mediaservices_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "storageAccounts":[
               {
                  "id":"[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]",
                  "type":"Primary"
               }
            ]
         }
      },
      {
         "name":"[variables('event_topic_media_indexer_name')]",
         "type":"Microsoft.EventGrid/systemTopics",
         "apiVersion":"2020-10-15-preview",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Media/mediaservices', variables('mediaservices_name'))]"
         ],
         "properties":{
            "source":"[resourceId('Microsoft.Media/mediaservices', variables('mediaservices_name'))]",
            "topicType":"Microsoft.Media.MediaServices"
         }
      },
      {
         "name": "[variables('event_topic_storage_trigger_name')]",
         "type": "Microsoft.EventGrid/systemTopics",
         "apiVersion": "2020-10-15-preview",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties": {
         "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]",
         "topicType": "Microsoft.Storage.StorageAccounts"
         }
      },
      {
         "name": "[concat(variables('event_topic_storage_trigger_name'), '/event-storage-trigger')]",
         "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
         "apiVersion": "2020-10-15-preview",
         "dependsOn": [
         "[resourceId('Microsoft.EventGrid/systemTopics', variables('event_topic_storage_trigger_name'))]"
         ],
         "properties": {
         "destination": {
            "properties": {
               "maxEventsPerBatch": 1,
               "preferredBatchSizeInKilobytes": 64,
               "endpointUrl": "[listCallbackURL(variables('logic_app_storage_trigger_url'), '2019-05-01').value]"
            },
            "endpointType": "WebHook"
         },
         "filter": {
            "subjectBeginsWith": "/blobServices/default/containers/source-files/blobs/",
            "subjectEndsWith": ".mp4",
            "includedEventTypes": [
               "Microsoft.Storage.BlobCreated"
            ]
         },
         "labels": [

         ],
         "eventDeliverySchema": "EventGridSchema",
         "retryPolicy": {
            "maxDeliveryAttempts": 30,
            "eventTimeToLiveInMinutes": 1440
         }
         }
      },
      {
         "type":"Microsoft.EventGrid/systemTopics/eventSubscriptions",
         "apiVersion":"2021-12-01",
         "name":"[concat(variables('event_topic_media_indexer_name'), '/VideoIndexerAmsNotifications')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventGrid/systemTopics', variables('event_topic_media_indexer_name'))]"
         ],
         "properties":{
            "destination":{
               "properties":{
                  "maxEventsPerBatch":1,
                  "preferredBatchSizeInKilobytes":64,
                  "endpointUrl": "[listCallbackURL(variables('logic_app_indexer_trigger_url'), '2019-05-01').value]"
               },
               "endpointType":"WebHook"
            },
            "filter":{
               "includedEventTypes":[
                  "Microsoft.Media.JobStateChange",
                  "Microsoft.Media.JobScheduled",
                  "Microsoft.Media.JobProcessing",
                  "Microsoft.Media.JobCanceling",
                  "Microsoft.Media.JobFinished",
                  "Microsoft.Media.JobCanceled",
                  "Microsoft.Media.JobErrored",
                  "Microsoft.Media.JobOutputStateChange",
                  "Microsoft.Media.JobOutputScheduled",
                  "Microsoft.Media.JobOutputProcessing",
                  "Microsoft.Media.JobOutputCanceling",
                  "Microsoft.Media.JobOutputFinished",
                  "Microsoft.Media.JobOutputCanceled",
                  "Microsoft.Media.JobOutputErrored",
                  "Microsoft.Media.LiveEventEncoderConnected",
                  "Microsoft.Media.LiveEventIncomingStreamReceived",
                  "Microsoft.Media.LiveEventEncoderDisconnected",
                  "Microsoft.Media.LiveEventConnectionRejected",
                  "Microsoft.Media.LiveEventTrackDiscontinuityDetected",
                  "Microsoft.Media.LiveEventIncomingVideoStreamsOutOfSync",
                  "Microsoft.Media.LiveEventIncomingDataChunkDropped",
                  "Microsoft.Media.LiveEventIncomingStreamsOutOfSync",
                  "Microsoft.Media.LiveEventIngestHeartbeat",
                  "Microsoft.Media.JobOutputProgress"
               ]
            },
            "eventDeliverySchema":"EventGridSchema",
            "retryPolicy":{
               "maxDeliveryAttempts":30,
               "eventTimeToLiveInMinutes":1440
            }
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts",
         "apiVersion":"2021-10-15",
         "name":"[variables('cosmosdb_retail2_name')]",
         "location":"[variables('location')]",
         "kind":"GlobalDocumentDB",
         "identity":{
            "type":"None"
         },
         "properties":{
            "publicNetworkAccess":"Enabled",
            "enableAutomaticFailover":false,
            "enableMultipleWriteLocations":false,
            "isVirtualNetworkFilterEnabled":false,
            "virtualNetworkRules":[
               
            ],
            "disableKeyBasedMetadataWriteAccess":false,
            "enableFreeTier":false,
            "enableAnalyticalStorage":true,
            "analyticalStorageConfiguration":{
               "schemaType":"WellDefined"
            },
            "databaseAccountOfferType":"Standard",
            "defaultIdentity":"FirstPartyIdentity",
            "networkAclBypass":"None",
            "disableLocalAuth":false,
            "consistencyPolicy":{
               "defaultConsistencyLevel":"Session",
               "maxIntervalInSeconds":5,
               "maxStalenessPrefix":100
            },
            "locations":[
               {
                  "locationName":"[variables('location')]",
                  "provisioningState":"Succeeded",
                  "failoverPriority":0,
                  "isZoneRedundant":false
               }
            ],
            "cors":[
               
            ],
            "capabilities":[
               
            ],
            "ipRules":[
               
            ],
            "backupPolicy":{
               "type":"Periodic",
               "periodicModeProperties":{
                  "backupIntervalInMinutes":240,
                  "backupRetentionIntervalInHours":8,
                  "backupStorageRedundancy":"Geo"
               }
            },
            "networkAclBypassResourceIds":[
               
            ]
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'),'/' ,variables('cosmos_database_name'))]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_name')]"
            }
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'), '/00000000-0000-0000-0000-000000000001')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "roleName":"Cosmos DB Built-in Data Reader",
            "type":"BuiltInRole",
            "assignableScopes":[
               "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "permissions":[
               {
                  "dataActions":[
                     "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                     "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                     "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                     "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                  ],
                  "notDataActions":[
                     
                  ]
               }
            ]
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'), '/00000000-0000-0000-0000-000000000002')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "roleName":"Cosmos DB Built-in Data Contributor",
            "type":"BuiltInRole",
            "assignableScopes":[
               "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
            ],
            "permissions":[
               {
                  "dataActions":[
                     "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                     "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                     "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                  ],
                  "notDataActions":[
                     
                  ]
               }
            ]
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'),'/',variables('cosmos_database_name'),'/retailcosmos')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_retail2_name'),variables('cosmos_database_name'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "resource":{
               "id":"retailcosmos",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/TransactionType"
                  ],
                  "kind":"Hash"
               },
               "uniqueKeyPolicy":{
                  "uniqueKeys":[
                     
                  ]
               },
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               },
               "analyticalStorageTtl":-1
            },
            "options":{
               "autoscaleSettings":{
                  "maxThroughput":"4000"
               }
            }
         }
      },
      {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'),'/',variables('cosmos_database_name'),'/retaildb')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_retail2_name'),variables('cosmos_database_name'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "resource":{
               "id":"retaildb",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/beforefoottraffic"
                  ],
                  "kind":"Hash"
               },
               "uniqueKeyPolicy":{
                  "uniqueKeys":[
                     
                  ]
               },
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               },
               "analyticalStorageTtl":-1
            },
            "options":{
               "autoscaleSettings":{
                  "maxThroughput":"4000"
               }
            }
         }
      },
	   {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'),'/' ,variables('cosmos_database_name_retailinventorydb'))]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "resource":{
               "id":"[variables('cosmos_database_name_retailinventorydb')]"
            }
         }
      },
	     {
         "type":"Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
         "apiVersion":"2021-10-15",
         "name":"[concat(variables('cosmosdb_retail2_name'),'/',variables('cosmos_database_name_retailinventorydb'),'/inventorydb')]",
         "dependsOn":[
            "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_retail2_name'),variables('cosmos_database_name_retailinventorydb'))]",
            "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name'))]"
         ],
         "properties":{
            "resource":{
               "id":"inventorydb",
               "indexingPolicy":{
                  "indexingMode":"consistent",
                  "automatic":true,
                  "includedPaths":[
                     {
                        "path":"/*"
                     }
                  ],
                  "excludedPaths":[
                     {
                        "path":"/\"_etag\"/?"
                     }
                  ]
               },
               "partitionKey":{
                  "paths":[
                     "/InventoryType"
                  ],
                  "kind":"Hash"
               },
               "uniqueKeyPolicy":{
                  "uniqueKeys":[
                     
                  ]
               },
               "conflictResolutionPolicy":{
                  "mode":"LastWriterWins",
                  "conflictResolutionPath":"/_ts"
               },
               "analyticalStorageTtl":-1
            },
            "options":{
               "autoscaleSettings":{
                  "maxThroughput":"4000"
               }
            }
         }
      },
      {
        "name": "[variables('func_media_recommendation_service_asp_name')]",
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "location": "[variables('location')]",
        "sku": {
          "name": "B1"
        },
        "kind": "linux",
        "properties": {
          "reserved": true
        }
      },
      {
        "name": "[variables('func_media_recommendation_service_storage_name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-04-01",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "kind": "Storage",
        "location": "[variables('location')]",
        "properties": {
  
        }
      },
      {
        "name": "[variables('func_media_recommendation_service_ai_name')]",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2018-05-01-preview",
        "location": "[variables('location')]",
        "properties": {
          "Application_Type": "web",
          "Flow_Type": "Bluefield",
          "Request_Source": "rest"
        }
      },
      {
        "name": "[variables('func_media_recommendation_service_app_name')]",
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('func_media_recommendation_service_storage_name'))]",
          "[concat('Microsoft.Web/serverfarms/', variables('func_media_recommendation_service_asp_name'))]",
          "[concat('Microsoft.Insights/components/', variables('func_media_recommendation_service_ai_name'))]"
        ],
        "kind": "functionapp",
        "properties": {
          "enabled": true,
          "hostNameSslStates": [
            {
              "name": "[concat(variables('func_media_recommendation_service_app_name'), '.azurewebsites.net')]",
              "sslState": "Disabled",
              "hostType": "Standard"
            },
            {
              "name": "[concat(variables('func_media_recommendation_service_app_name'), '.scm.azurewebsites.net')]",
              "sslState": "Disabled",
              "hostType": "Repository"
            }
          ],
          "serverFarmId": "[resourceId(variables('resource_group_name'), 'Microsoft.Web/serverfarms', variables('func_media_recommendation_service_asp_name'))]",
          "reserved": false,
          "siteConfig": {
            "netFrameworkVersion": "v4.0",
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('func_media_recommendation_service_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('func_media_recommendation_service_storage_name')), '2019-04-01').keys[0].value)]"
              },
              {
                "name": "CONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_account_name'), ';AccountKey=', listKeys(resourceId(variables('resource_group_name'),'Microsoft.Storage/storageAccounts', variables('storage_account_name')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
              },
              {
                "name": "CONTAINER_WITH_VIDEO_JSONS",
                "value": "finalmediademostorage"
              },
              {
                "name": "CONTAINER_WITH_MODELS",
                "value": "recommendermodel"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('func_media_recommendation_service_ai_name'))).InstrumentationKey]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "python"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "DISABLE_HUGO_BUILD",
                "value": "true"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "true"
              }
            ],
            "use32BitWorkerProcess": true,
            "managedPipelineMode": "Integrated",
            "cors": {
              "allowedOrigins": [
                "https://functions.azure.com",
                "https://functions-staging.azure.com",
                "https://functions-next.azure.com"
              ],
              "supportCredentials": false
            }
          },
          "containerSize": 1536,
          "httpsOnly": false
        }
      },
        {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('func_media_recommendation_service_app_name'), '/web')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('func_media_recommendation_service_app_name'))]"
        ],
        "properties": {
          "numberOfWorkers": 1,
          "defaultDocuments": [
            "Default.htm",
            "Default.html",
            "Default.asp",
            "index.htm",
            "index.html",
            "iisstart.htm",
            "default.aspx",
            "index.php",
            "hostingstart.html"
          ],
          "netFrameworkVersion": "v4.0",
          "linuxFxVersion": "PYTHON|3.8",
          "requestTracingEnabled": false,
          "remoteDebuggingEnabled": false,
          "httpLoggingEnabled": false,
          "logsDirectorySizeLimit": 35,
          "detailedErrorLoggingEnabled": false,
          "publishingUsername": "[concat('$', variables('func_media_recommendation_service_app_name'))]",
          "azureStorageAccounts": {
  
          },
          "scmType": "None",
          "use32BitWorkerProcess": true,
          "webSocketsEnabled": false,
          "alwaysOn": true,
          "managedPipelineMode": "Integrated",
          "virtualApplications": [
            {
              "virtualPath": "/",
              "physicalPath": "site\\wwwroot",
              "preloadEnabled": true
            }
          ],
          "loadBalancing": "LeastRequests",
          "experiments": {
            "rampUpRules": [
  
            ]
          },
          "autoHealEnabled": false,
          "localMySqlEnabled": false,
          "ipSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictionsUseMain": false,
          "http20Enabled": false,
          "minTlsVersion": "1.2",
          "ftpsState": "AllAllowed",
          "reservedInstanceCount": 0
        }
      },
      {
        "name": "[variables('func_model_builder_service_asp_name')]",
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2018-02-01",
        "location": "[variables('location')]",
        "sku": {
          "name": "B1"
        },
        "kind": "linux",
        "properties": {
          "reserved": true
        }
      },
      {
        "name": "[variables('func_model_builder_service_storage_name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-04-01",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        },
        "kind": "Storage",
        "location": "[variables('location')]",
        "properties": {
  
        }
      },
      {
        "name": "[variables('func_model_builder_service_ai_name')]",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2018-05-01-preview",
        "location": "[variables('location')]",
        "properties": {
          "Application_Type": "web",
          "Flow_Type": "Bluefield",
          "Request_Source": "rest"
        }
      },
      {
        "name": "[variables('func_model_builder_service_app_name')]",
        "type": "Microsoft.Web/sites",
        "apiVersion": "2018-11-01",
        "location": "[variables('location')]",
        "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', variables('func_model_builder_service_storage_name'))]",
          "[concat('Microsoft.Web/serverfarms/', variables('func_model_builder_service_asp_name'))]",
          "[concat('Microsoft.Insights/components/', variables('func_model_builder_service_ai_name'))]"
        ],
        "kind": "functionapp",
        "properties": {
          "enabled": true,
          "hostNameSslStates": [
            {
              "name": "[concat(variables('func_model_builder_service_app_name'), '.azurewebsites.net')]",
              "sslState": "Disabled",
              "hostType": "Standard"
            },
            {
              "name": "[concat(variables('func_model_builder_service_app_name'), '.scm.azurewebsites.net')]",
              "sslState": "Disabled",
              "hostType": "Repository"
            }
          ],
          "serverFarmId": "[resourceId(variables('resource_group_name'), 'Microsoft.Web/serverfarms', variables('func_model_builder_service_asp_name'))]",
          "reserved": false,
          "siteConfig": {
            "netFrameworkVersion": "v4.0",
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('func_model_builder_service_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('func_model_builder_service_storage_name')), '2019-04-01').keys[0].value)]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('func_model_builder_service_ai_name'))).InstrumentationKey]"
              },
              {
                "name": "AzureWebJobs.recommender.Disabled",
                "value": "0"
              },
              {
                "name": "CONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_account_name'), ';AccountKey=', listKeys(resourceId(variables('resource_group_name'),'Microsoft.Storage/storageAccounts', variables('storage_account_name')), '2019-04-01').keys[0].value,';EndpointSuffix=core.windows.net')]"
              },
              {
                "name": "CONTAINER_WITH_VIDEO_JSONS",
                "value": "finalmediademostorage"
              },
              {
                "name": "CONTAINER_WITH_MODELS",
                "value": "recommendermodel"
              },
              {
                "name": "VIDEO_INDEXER_URL",
                "value": "[concat('https://api.videoindexer.ai/trial/Accounts/',parameters('video_indexer_account_id'),'/Videos/{}/Index?reTranslate=False&includeStreamingUrls=True')]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "python"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "DISABLE_HUGO_BUILD",
                "value": "true"
              },
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "true"
              }
            ],
            "use32BitWorkerProcess": true,
            "managedPipelineMode": "Integrated",
            "cors": {
              "allowedOrigins": [
                "https://functions.azure.com",
                "https://functions-staging.azure.com",
                "https://functions-next.azure.com"
              ],
              "supportCredentials": false
            }
          },
          "containerSize": 1536,
          "httpsOnly": false
        }
      },
        {
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2018-11-01",
        "name": "[concat(variables('func_model_builder_service_app_name'), '/web')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('func_model_builder_service_app_name'))]"
        ],
        "properties": {
          "numberOfWorkers": 1,
          "defaultDocuments": [
            "Default.htm",
            "Default.html",
            "Default.asp",
            "index.htm",
            "index.html",
            "iisstart.htm",
            "default.aspx",
            "index.php",
            "hostingstart.html"
          ],
          "netFrameworkVersion": "v4.0",
          "linuxFxVersion": "PYTHON|3.8",
          "requestTracingEnabled": false,
          "remoteDebuggingEnabled": false,
          "httpLoggingEnabled": false,
          "logsDirectorySizeLimit": 35,
          "detailedErrorLoggingEnabled": false,
          "publishingUsername": "[concat('$', variables('func_model_builder_service_app_name'))]",
          "azureStorageAccounts": {
  
          },
          "scmType": "None",
          "use32BitWorkerProcess": true,
          "webSocketsEnabled": false,
          "alwaysOn": true,
          "managedPipelineMode": "Integrated",
          "virtualApplications": [
            {
              "virtualPath": "/",
              "physicalPath": "site\\wwwroot",
              "preloadEnabled": true
            }
          ],
          "loadBalancing": "LeastRequests",
          "experiments": {
            "rampUpRules": [
  
            ]
          },
          "autoHealEnabled": false,
          "localMySqlEnabled": false,
          "ipSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictionsUseMain": false,
          "http20Enabled": false,
          "minTlsVersion": "1.2",
          "ftpsState": "AllAllowed",
          "reservedInstanceCount": 0
        }
      },
      {
         "type": "Microsoft.Search/searchServices",
         "apiVersion": "2020-08-01",
         "name": "[variables('incident_search_retail_name')]",
         "location": "[variables('location')]",
         "sku": {
         "name": "standard"
         },
         "properties": {
         "replicaCount": 1,
         "partitionCount": 1,
         "hostingMode": "Default",
         "publicNetworkAccess": "Enabled",
         "networkRuleSet": {
            "ipRules": []
         }
         }
      },
      {
         "type": "Microsoft.Web/serverfarms",
         "apiVersion": "2020-06-01",
         "name": "[variables('func_media_transcript_asp_name')]",
         "location": "[variables('location')]",
         "sku": {
         "name": "B1"
         },
         "kind": "linux",
         "properties": {
         "reserved": true
         }
      },
      {
         "name": "[variables('func_media_transcript_storage_name')]",
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2019-04-01",
         "sku": {
         "name": "Standard_LRS",
         "tier": "Standard"
         },
         "kind": "Storage",
         "location": "[variables('location')]",
         "properties": {

         }
      },
      {
         "name": "[variables('func_media_transcript_app_name')]",
         "type": "Microsoft.Web/sites",
         "apiVersion": "2018-11-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[concat('Microsoft.Storage/storageAccounts/', variables('func_media_transcript_storage_name'))]",
         "[concat('Microsoft.Web/serverfarms/', variables('func_media_transcript_asp_name'))]",
         "[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmosdb_retail2_name')))]"
         ],
         "kind": "functionapp",
         "properties": {
         "enabled": true,
         "hostNameSslStates": [
            {
               "name": "[concat(variables('func_media_transcript_app_name'), '.azurewebsites.net')]",
               "sslState": "Disabled",
               "hostType": "Standard"
            },
            {
               "name": "[concat(variables('func_media_transcript_app_name'), '.scm.azurewebsites.net')]",
               "sslState": "Disabled",
               "hostType": "Repository"
            }
         ],
         "serverFarmId": "[resourceId(variables('resource_group_name'), 'Microsoft.Web/serverfarms', variables('func_media_transcript_asp_name'))]",
         "reserved": false,
         "siteConfig": {
            "netFrameworkVersion": "v4.0",
            "appSettings": [
               {
               "name": "AzureWebJobsDashboard",
               "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('func_media_transcript_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('func_media_transcript_storage_name')), '2019-04-01').keys[0].value)]"
               },
               {
               "name": "AzureWebJobsStorage",
               "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('func_media_transcript_storage_name'), ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('func_media_transcript_storage_name')), '2019-04-01').keys[0].value)]"
               },
               {
               "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
               "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('func_media_transcript_storage_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('func_media_transcript_storage_name')), '2019-04-01').keys[0].value)]"
               },
               {
               "name": "FUNCTIONS_WORKER_RUNTIME",
               "value": "dotnet"
               },
               {
               "name": "FUNCTIONS_EXTENSION_VERSION",
               "value": "~2"
               },
               {
               "name": "collectionName",
               "value": "transcript"
               },
               {
               "name": "CosmosDbConnectionString",
               "value": "[concat('AccountEndpoint=https://', variables('cosmosdb_retail2_name'), '.documents.azure.com:443/;AccountKey=',listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey,';')]"
               },
               {
               "name": "databaseName",
               "value": "[variables('cosmos_database_video_indexer')]"
               },
               {
               "name": "WEBSITE_RUN_FROM_PACKAGE",
               "value": "true"
               },
               {
               "name": "STORAGE_CONTAINER_NAME",
               "value": "[variables('source_storage_container')]"
               },
               {
               "name": "STORAGE_FILE_NAME",
               "value": "videoindexer.json"
               }
            ],
            "use32BitWorkerProcess": true,
            "managedPipelineMode": "Integrated",
            "cors": {
               "allowedOrigins": [
               "https://functions.azure.com",
               "https://functions-staging.azure.com",
               "https://functions-next.azure.com"
               ],
               "supportCredentials": false
            }
         },
         "containerSize": 1536,
         "httpsOnly": false
         }
      },
      {
         "type":"Microsoft.CognitiveServices/accounts",
         "apiVersion":"2021-04-30",
         "name":"[variables('accounts_transqna_retail_name')]",
         "location":"global",
         "sku":{
            "name":"S1"
         },
         "kind":"TextTranslation",
         "properties":{
            "customSubDomainName":"[variables('accounts_transqna_retail_name')]",
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults",
         "name":"[variables('key_vault_name')]",
         "apiVersion":"2018-02-14",
         "location":"[variables('location')]",
         "properties":{
            "enabledForDeployment":true,
            "enabledForDiskEncryption":true,
            "enabledForTemplateDeployment":true,
            "vaultUri":"[concat('https://', variables('key_vault_name'), '.vault.azure.net/')]",
            "tenantId":"[subscription().tenantId]",
            "accessPolicies":[
               
            ],
            "sku":{
               "name":"Standard",
               "family":"A"
            },
            "networkAcls":{
               "defaultAction":"Allow",
               "bypass":"AzureServices"
            }
         }
      },
      {
         "type":"Microsoft.KeyVault/vaults/secrets",
         "name":"[concat(variables('key_vault_name'), '/SqlPassword')]",
         "apiVersion":"2018-02-14",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.KeyVault/vaults', variables('key_vault_name'))]"
         ],
         "properties":{
            "value":"[parameters('sql_administrator_login_password')]"
         }
      },
	  {
         "type":"Microsoft.KeyVault/vaults/secrets",
         "name":"[concat(variables('key_vault_name'), '/Cosmos-cred')]",
         "apiVersion":"2018-02-14",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.KeyVault/vaults', variables('key_vault_name'))]",
			"[concat('Microsoft.DocumentDB/databaseAccounts/', toLower(variables('cosmosdb_retail2_name')))]"
         ],
         "properties":{
			"value":"[concat('AccountEndpoint=https://', variables('cosmosdb_retail2_name'), '.documents.azure.com:443/;AccountKey=',listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_retail2_name')), providers('Microsoft.DocumentDB', 'databaseAccounts').apiVersions[0]).primaryMasterKey,';')]"
      }
	  },
      {
         "name":"[variables('iot_hub_name')]",
         "type":"Microsoft.Devices/IotHubs",
         "apiVersion":"2019-03-22",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "name":"[concat(variables('iot_hub_name'), '/events/asa-cg')]",
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "dependsOn":[
            "[resourceId('Microsoft.Devices/IotHubs', variables('iot_hub_name'))]"
         ]
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs",
         "apiVersion":"2019-06-01",
         "name":"[variables('asa_name_retail')]",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]",
            "[resourceId('Microsoft.Devices/IotHubs', variables('iothub_foottraffic'))]"
         ],
         "location":"[variables('location')]",
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "sku":{
               "name":"Standard"
            },
            "eventsOutOfOrderPolicy":"Adjust",
            "outputErrorPolicy":"Stop",
            "eventsOutOfOrderMaxDelayInSeconds":0,
            "eventsLateArrivalMaxDelayInSeconds":5,
            "dataLocale":"en-US"
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/inputs",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_retail'), '/iot-foottraffic-hub')]",
         "dependsOn":[
            "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('asa_name_retail'))]",
            "[resourceId('Microsoft.Devices/IotHubs', variables('iothub_foottraffic'))]"
         ],
         "properties":{
            "type":"Stream",
            "datasource":{
               "type":"Microsoft.Devices/IotHubs",
               "properties":{
                  "iotHubNamespace":"[variables('iothub_foottraffic')]",
                  "sharedAccessPolicyName":"iothubowner",
                  "sharedAccessPolicyKey":"[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iothub_foottraffic')), '2018-04-01').value[0].primaryKey]",
                  "consumerGroupName":"asa-cg",
                  "endpoint":"messages/events"
               }
            },
            "serialization":{
               "type":"Json",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/outputs",
         "apiVersion":"2017-04-01-preview",
         "name":"[concat(variables('asa_name_retail'), '/adlsgen2-iothub-output')]",
         "dependsOn":[
            "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('asa_name_retail'))]"
         ],
         "properties":{
            "datasource":{
               "type":"Microsoft.Storage/Blob",
               "properties":{
                  "storageAccounts":[
                     {
                        "accountName":"[variables('storage_account_name')]",
                        "accountKey":"[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name')),'2019-04-01').keys[0].value]"
                     }
                  ],
                  "container":"iot",
                  "pathPattern":"iot-foottraffic/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/",
                  "dateFormat":"yyyy/MM/dd",
                  "timeFormat":"HH",
                  "authenticationMode":"ConnectionString"
               }
            },
            "timeWindow":"00:01:00",
            "sizeWindow":2000,
            "serialization":{
               "type":"Parquet",
               "properties":{
                  "encoding":"UTF8"
               }
            }
         }
      },
      {
         "type":"Microsoft.StreamAnalytics/streamingjobs/transformations",
         "apiVersion":"2016-03-01",
         "name":"[concat(variables('asa_name_retail'), '/query')]",
         "dependsOn":[
            "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('asa_name_retail'))]"
         ],
         "properties":{
            "streamingUnits":6,
            "query":"[variables('asa_query_retail')]"
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces",
         "apiVersion":"2021-11-01",
         "name":"[variables('eventhub_evh_namespace_retail_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "disableLocalAuth":false,
            "zoneRedundant":true,
            "isAutoInflateEnabled":false,
            "maximumThroughputUnits":0,
            "kafkaEnabled":true
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/AuthorizationRules",
         "apiVersion":"2021-11-01",
         "name":"[concat(variables('eventhub_evh_namespace_retail_name'), '/RootManageSharedAccessKey')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_retail_name'))]"
         ],
         "properties":{
            "rights":[
               "Listen",
               "Manage",
               "Send"
            ]
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs",
         "apiVersion":"2021-11-01",
         "name":"[concat(variables('eventhub_evh_namespace_retail_name'), '/spatialanalysiseventhub')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_retail_name'))]"
         ],
         "properties":{
            "messageRetentionInDays":1,
            "partitionCount":1,
            "status":"Active"
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/networkRuleSets",
         "apiVersion":"2021-11-01",
         "name":"[concat(variables('eventhub_evh_namespace_retail_name'), '/default')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_retail_name'))]"
         ],
         "properties":{
            "publicNetworkAccess":"Enabled",
            "defaultAction":"Allow",
            "virtualNetworkRules":[
               
            ],
            "ipRules":[
               
            ]
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
         "apiVersion":"2021-11-01",
         "name":"[concat(variables('eventhub_evh_namespace_retail_name'), '/spatialanalysiseventhub/ManageRule')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhub_evh_namespace_retail_name'), 'spatialanalysiseventhub')]",
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_retail_name'))]"
         ],
         "properties":{
            "rights":[
               "Manage",
               "Send",
               "Listen"
            ]
         }
      },
      {
         "type":"Microsoft.EventHub/namespaces/eventhubs/consumergroups",
         "apiVersion":"2021-11-01",
         "name":"[concat(variables('eventhub_evh_namespace_retail_name'), '/spatialanalysiseventhub/$Default')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('eventhub_evh_namespace_retail_name'), 'spatialanalysiseventhub')]",
            "[resourceId('Microsoft.EventHub/namespaces', variables('eventhub_evh_namespace_retail_name'))]"
         ],
         "properties":{
            
         }
      },
      {
         "type":"Microsoft.CognitiveServices/accounts",
         "apiVersion":"2021-10-01",
         "name":"[variables('forms_retail_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"S0"
         },
         "kind":"FormRecognizer",
         "properties":{
            "privateEndpointConnections":[
               
            ],
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "name":"[variables('workspace_name_synapseretail')]",
         "type":"Microsoft.Synapse/workspaces",
         "apiVersion":"2021-05-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[concat('Microsoft.Storage/storageAccounts/', variables('storage_account_name'), '/blobServices/default/containers/', variables('default_data_lake_storage_file_system_name'))]"
         ],
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "defaultDataLakeStorage":{
               "accountUrl":"[variables('default_data_lake_storage_account_url')]",
               "filesystem":"[variables('default_data_lake_storage_file_system_name')]"
            },
            "sqlAdministratorLogin":"[variables('sql_administrator_login_id')]",
            "sqlAdministratorLoginPassword":"[parameters('sql_administrator_login_password')]"
         },
         "resources":[
            {
               "type":"firewallrules",
               "apiVersion":"2021-05-01",
               "name":"allowAll",
               "location":"[variables('location')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_synapseretail'))]"
               ],
               "properties":{
                  "startIpAddress":"0.0.0.0",
                  "endIpAddress":"255.255.255.255"
               }
            }
         ]
      },
      {
         "name":"[concat(variables('workspace_name_synapseretail'), '/', variables('spark_compute_name'))]",
         "type":"Microsoft.Synapse/workspaces/bigDataPools",
         "apiVersion":"2021-05-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_synapseretail'))]"
         ],
         "properties":{
            "nodeCount":"[variables('spark_node_count')]",
            "nodeSizeFamily":"[variables('spark_node_size_family')]",
            "nodeSize":"[variables('spark_node_size')]",
            "autoScale":{
               "enabled":"[variables('spark_auto_scale_enabled')]",
               "minNodeCount":"[variables('spark_min_node_count')]",
               "maxNodeCount":"[variables('spark_max_node_count')]"
            },
            "autoPause":{
               "enabled":"[variables('spark_auto_pause_enabled')]",
               "delayInMinutes":"[variables('spark_auto_pause_delay_in_minutes')]"
            },
            "sparkVersion":"[variables('spark_version')]"
         }
      },
      {
         "name":"[concat(variables('workspace_name_synapseretail'), '/', variables('sql_compute_name'))]",
         "type":"Microsoft.Synapse/workspaces/sqlPools",
         "apiVersion":"2021-05-01",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Synapse/workspaces', variables('workspace_name_synapseretail'))]"
         ],
         "sku":{
            "name":"[variables('sql_server_sku')]"
         },
         "properties":{
            "createMode":"Default",
            "collation":"SQL_Latin1_General_CP1_CI_AS"
         }
      },
      {
         "type":"Microsoft.CognitiveServices/accounts",
         "apiVersion":"2021-10-01",
         "name":"[variables('accounts_cogretail_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"S0"
         },
         "kind":"CognitiveServices",
         "identity":{
            "type":"None",
            "userAssignedIdentities":{
               
            }
         },
         "properties":{
            "apiProperties":{
               
            },
            "customSubDomainName":"[variables('accounts_cogretail_name')]",
            "publicNetworkAccess":"Enabled"
         }
      },
      {
         "name":"[variables('storage_account_name')]",
         "type":"Microsoft.Storage/storageAccounts",
         "apiVersion":"2020-08-01-preview",
         "location":"[variables('location')]",
         "sku":{
            "name":"Standard_LRS",
            "tier":"Standard"
         },
         "kind":"StorageV2",
         "properties":{
            "minimumTlsVersion":"TLS1_2",
            "allowBlobPublicAccess":true,
            "networkAcls":{
               "bypass":"AzureServices",
               "defaultAction":"Allow"
            },
            "supportsHttpsTrafficOnly":true,
            "encryption":{
               "services":{
                  "file":{
                     "keyType":"Account",
                     "enabled":true
                  },
                  "blob":{
                     "keyType":"Account",
                     "enabled":true
                  }
               },
               "keySource":"Microsoft.Storage"
            },
            "accessTier":"Hot"
         },
         "resources":[
            {
               "type":"blobServices/containers",
               "apiVersion":"2018-07-01",
               "name":"[concat('default/', variables('default_data_lake_storage_file_system_name'))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
               ]
            }
         ]
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "sku":{
            "name":"Standard_RAGRS",
            "tier":"Standard"
         },
         "properties":{
            "cors":{
               "corsRules":[
                  {
                     "allowedOrigins":[
                        "*"
                     ],
                     "allowedMethods":[
                        "GET"
                     ],
                     "maxAgeInSeconds":1000,
                     "exposedHeaders":[
                        "*"
                     ],
                     "allowedHeaders":[
                        "*"
                     ]
                  },
                  {
                     "allowedOrigins":[
                        "*"
                     ],
                     "allowedMethods":[
                        "POST"
                     ],
                     "maxAgeInSeconds":1000,
                     "exposedHeaders":[
                        "*"
                     ],
                     "allowedHeaders":[
                        "*"
                     ]
                  },
                  {
                     "allowedOrigins":[
                        "*"
                     ],
                     "allowedMethods":[
                        "DELETE"
                     ],
                     "maxAgeInSeconds":1000,
                     "exposedHeaders":[
                        "*"
                     ],
                     "allowedHeaders":[
                        "*"
                     ]
                  },
                  {
                     "allowedOrigins":[
                        "*"
                     ],
                     "allowedMethods":[
                        "MERGE"
                     ],
                     "maxAgeInSeconds":1000,
                     "exposedHeaders":[
                        "*"
                     ],
                     "allowedHeaders":[
                        "*"
                     ]
                  }
               ]
            }
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default')]",
         "type":"Microsoft.Storage/storageAccounts/queueServices",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "cors":{
               "corsRules":[
                  
               ]
            }
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default')]",
         "type":"Microsoft.Storage/storageAccounts/tableServices",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "cors":{
               "corsRules":[
                  
               ]
            }
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/adfstagedcopytempdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/adfstagedpolybasetempdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/customer-churn-data')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/dataverse-retaildreamd-unqe3e6254ff0834070858f5cbc69b77')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/iot')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
    {
         "name": "[concat( variables('storage_account_name'), '/default/media-assets')]",
         "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion": "2020-08-01-preview",
         "dependsOn": [
         "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
         "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties": {
         "defaultEncryptionScope": "$account-encryption-key",
         "denyEncryptionScopeOverride": false,
         "publicAccess": "Container"
         }
      },
	     {
         "name": "[concat( variables('storage_account_name'), '/default/recommendermodel')]",
         "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion": "2020-08-01-preview",
         "dependsOn": [
         "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
         "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties": {
         "defaultEncryptionScope": "$account-encryption-key",
         "denyEncryptionScopeOverride": false,
         "publicAccess": "Blob"
         }
      },
	  
      {
         "name":"[concat(variables('storage_account_name'), '/default/magentocontosomergerdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat(variables('storage_account_name'), '/default/magentosource')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name": "[concat( variables('storage_account_name'), '/default/source-files')]",
         "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion": "2020-08-01-preview",
         "dependsOn": [
         "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
         "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties": {
         "defaultEncryptionScope": "$account-encryption-key",
         "denyEncryptionScopeOverride": false,
         "publicAccess": "Container"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/market-basket')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/marketingdb-staging')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/rawdata-customerinsight')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/retail-customerreviewsdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/retail-notebook-data')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/retailcog-skillset-image-projection')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/retaildata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/sapdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/thermostat')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"None"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/twitterdata')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Blob"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/video')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Blob"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/videoanalyzer')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/retail20')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
      {
         "name":"[concat( variables('storage_account_name'), '/default/customcsv')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incident-search')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incidentpdftraining')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incidentblobprojections')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incidentreportjson')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incidentreportpdf')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	  {
         "name":"[concat( variables('storage_account_name'), '/default/incidentsearchcsv')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/incidenttranslated')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	   {
         "name":"[concat( variables('storage_account_name'), '/default/idcard')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	    {
         "name":"[concat( variables('storage_account_name'), '/default/formrecogcustommodel')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	      {
         "name":"[concat( variables('storage_account_name'), '/default/finalvideo')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
	  {
         "name":"[concat( variables('storage_account_name'), '/default/adx-historical')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },
		{
         "name":"[concat( variables('storage_account_name'), '/default/semanticsearch')]",
         "type":"Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion":"2020-08-01-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storage_account_name'), 'default')]",
            "[resourceId('Microsoft.Storage/storageAccounts',  variables('storage_account_name'))]"
         ],
         "properties":{
            "defaultEncryptionScope":"$account-encryption-key",
            "denyEncryptionScopeOverride":false,
            "publicAccess":"Container"
         }
      },		  
      {
         "name":"[variables('serverfarm_adx_thermostat_realtime_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1"
         },
         "kind":"linux",
         "properties":{
            "reserved":true
         }
      },
      {
         "type":"Microsoft.Web/sites",
         "apiVersion":"2021-02-01",
         "name":"[variables('sites_adx_thermostat_realtime_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_adx_thermostat_realtime_name'))]"
         ],
         "kind":"app,linux",
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_adx_thermostat_realtime_name'))]",
            "reserved":true,
            "isXenon":false,
            "hyperV":false,
            "siteConfig":{
               "numberOfWorkers":1,
               "linuxFxVersion":"PYTHON|3.9",
               "acrUseManagedIdentityCreds":false,
               "alwaysOn":false,
               "http20Enabled":false,
               "functionAppScaleLimit":0,
               "minimumElasticInstanceCount":1
            },
            "scmSiteAlsoStopped":false,
            "clientAffinityEnabled":false,
            "clientCertEnabled":false,
            "clientCertMode":"Required",
            "hostNamesDisabled":false,
            "customDomainVerificationId":"B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
            "containerSize":0,
            "dailyMemoryTimeQuota":0,
            "httpsOnly":false,
            "redundancyMode":"None",
            "storageAccountRequired":false,
            "keyVaultReferenceIdentity":"SystemAssigned"
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '/ftp')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '/scm')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/config",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '/web')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
         ],
         "properties":{
            "numberOfWorkers":1,
            "defaultDocuments":[
               "Default.htm",
               "Default.html",
               "Default.asp",
               "index.htm",
               "index.html",
               "iisstart.htm",
               "default.aspx",
               "index.php",
               "hostingstart.html"
            ],
            "netFrameworkVersion":"v4.0",
            "linuxFxVersion":"PYTHON|3.9",
            "requestTracingEnabled":false,
            "remoteDebuggingEnabled":false,
            "remoteDebuggingVersion":"VS2019",
            "httpLoggingEnabled":false,
            "acrUseManagedIdentityCreds":false,
            "logsDirectorySizeLimit":35,
            "detailedErrorLoggingEnabled":false,
            "publishingUsername":"$adx-thermostat-realtime",
            "scmType":"None",
            "use32BitWorkerProcess":true,
            "webSocketsEnabled":false,
            "alwaysOn":false,
            "managedPipelineMode":"Integrated",
            "virtualApplications":[
               {
                  "virtualPath":"/",
                  "physicalPath":"site\\wwwroot",
                  "preloadEnabled":false
               }
            ],
            "loadBalancing":"LeastRequests",
            "experiments":{
               "rampUpRules":[
                  
               ]
            },
            "autoHealEnabled":false,
            "vnetRouteAllEnabled":false,
            "vnetPrivatePortsCount":0,
            "localMySqlEnabled":false,
            "ipSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictionsUseMain":false,
            "http20Enabled":false,
            "minTlsVersion":"1.2",
            "scmMinTlsVersion":"1.0",
            "ftpsState":"AllAllowed",
            "preWarmedInstanceCount":0,
            "functionAppScaleLimit":0,
            "functionsRuntimeScaleMonitoringEnabled":false,
            "minimumElasticInstanceCount":1,
            "azureStorageAccounts":{
               
            }
         }
      },
      {
         "type":"Microsoft.Web/sites/hostNameBindings",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_adx_thermostat_realtime_name'), '/', variables('sites_adx_thermostat_realtime_name'), '.azurewebsites.net')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_adx_thermostat_realtime_name'))]"
         ],
         "properties":{
            "siteName":"[variables('sites_adx_thermostat_realtime_name')]",
            "hostNameType":"Verified"
         }
      },
      {
         "name":"[variables('serverfarm_retail_mediasearch_app_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1"
         },
         "kind":"linux",
         "properties":{
            "reserved":true
         }
      },
      {
         "type":"Microsoft.Web/sites",
         "apiVersion":"2021-03-01",
         "name":"[variables('sites_retail_mediasearch_app_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_retail_mediasearch_app_name'))]"
         ],
         "kind":"app,linux",
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('sites_retail_mediasearch_app_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('sites_retail_mediasearch_app_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_retail_mediasearch_app_name'))]",
            "reserved":true,
            "isXenon":false,
            "hyperV":false,
            "siteConfig":{
               "numberOfWorkers":1,
               "linuxFxVersion":"DOTNETCORE|3.1",
               "acrUseManagedIdentityCreds":false,
               "alwaysOn":true,
               "http20Enabled":false,
               "functionAppScaleLimit":0,
               "minimumElasticInstanceCount":0
            },
            "scmSiteAlsoStopped":false,
            "clientAffinityEnabled":false,
            "clientCertEnabled":false,
            "clientCertMode":"Required",
            "hostNamesDisabled":false,
            "customDomainVerificationId":"B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
            "containerSize":0,
            "dailyMemoryTimeQuota":0,
            "httpsOnly":false,
            "redundancyMode":"None",
            "storageAccountRequired":false,
            "keyVaultReferenceIdentity":"SystemAssigned"
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-03-01",
         "name":"[concat(variables('sites_retail_mediasearch_app_name'), '/ftp')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_retail_mediasearch_app_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-03-01",
         "name":"[concat(variables('sites_retail_mediasearch_app_name'), '/scm')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_retail_mediasearch_app_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/config",
         "apiVersion":"2021-03-01",
         "name":"[concat(variables('sites_retail_mediasearch_app_name'), '/web')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_retail_mediasearch_app_name'))]"
         ],
         "properties":{
            "numberOfWorkers":1,
            "defaultDocuments":[
               "Default.htm",
               "Default.html",
               "Default.asp",
               "index.htm",
               "index.html",
               "iisstart.htm",
               "default.aspx",
               "index.php",
               "hostingstart.html"
            ],
            "netFrameworkVersion":"v4.0",
            "linuxFxVersion":"DOTNETCORE|3.1",
            "requestTracingEnabled":false,
            "remoteDebuggingEnabled":false,
            "httpLoggingEnabled":false,
            "acrUseManagedIdentityCreds":false,
            "logsDirectorySizeLimit":35,
            "detailedErrorLoggingEnabled":false,
            "publishingUsername":"[concat('$',variables('sites_retail_mediasearch_app_name'))]",
            "scmType":"None",
            "use32BitWorkerProcess":true,
            "webSocketsEnabled":false,
            "alwaysOn":true,
            "managedPipelineMode":"Integrated",
            "virtualApplications":[
               {
                  "virtualPath":"/",
                  "physicalPath":"site\\wwwroot",
                  "preloadEnabled":true
               }
            ],
            "loadBalancing":"LeastRequests",
            "experiments":{
               "rampUpRules":[
                  
               ]
            },
            "autoHealEnabled":false,
            "vnetRouteAllEnabled":false,
            "vnetPrivatePortsCount":0,
            "localMySqlEnabled":false,
            "ipSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictionsUseMain":false,
            "http20Enabled":false,
            "minTlsVersion":"1.2",
            "scmMinTlsVersion":"1.0",
            "ftpsState":"AllAllowed",
            "preWarmedInstanceCount":0,
            "functionAppScaleLimit":0,
            "functionsRuntimeScaleMonitoringEnabled":false,
            "minimumElasticInstanceCount":0,
            "azureStorageAccounts":{
               
            }
         }
      },
      {
         "type":"Microsoft.Web/sites/hostNameBindings",
         "apiVersion":"2021-03-01",
         "name":"[concat(variables('sites_retail_mediasearch_app_name'), '/', variables('sites_retail_mediasearch_app_name'), '.azurewebsites.net')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_retail_mediasearch_app_name'))]"
         ],
         "properties":{
            "siteName":"[variables('sites_retail_mediasearch_app_name')]",
            "hostNameType":"Verified"
         }
      },
      {
         "name":"[variables('serverfarm_app_iotfoottraffic_sensor_retail_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1"
         },
         "kind":"linux",
         "properties":{
            "reserved":true
         }
      },
      {
         "type":"Microsoft.Web/sites",
         "apiVersion":"2021-02-01",
         "name":"[variables('sites_app_iotfoottraffic_sensor_retail_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_iotfoottraffic_sensor_retail_name'))]"
         ],
         "kind":"app,linux",
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('serverfarm_app_iotfoottraffic_sensor_retail_name'))]",
            "reserved":true,
            "isXenon":false,
            "hyperV":false,
            "siteConfig":{
               "numberOfWorkers":1,
               "linuxFxVersion":"PYTHON|3.7",
               "acrUseManagedIdentityCreds":false,
               "alwaysOn":false,
               "http20Enabled":false,
               "functionAppScaleLimit":0,
               "minimumElasticInstanceCount":0,
               "appSettings":[
                  {
                     "name":"IoTHubConfig",
                     "value":""
                  },
                  {
                     "name":"IoTSimulatorConfigs",
                     "value":"{\"main_data_frequency_seconds\":1,\"data\":[{\"before-foottraffic\":{\"minValue\":18,\"maxValue\":25}},{\"after-foottraffic\":{\"minValue\":35,\"maxValue\":45}}]}"
                  }
               ]
            },
            "scmSiteAlsoStopped":false,
            "clientAffinityEnabled":false,
            "clientCertEnabled":false,
            "clientCertMode":"Required",
            "hostNamesDisabled":false,
            "customDomainVerificationId":"B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
            "containerSize":0,
            "dailyMemoryTimeQuota":0,
            "httpsOnly":false,
            "redundancyMode":"None",
            "storageAccountRequired":false,
            "keyVaultReferenceIdentity":"SystemAssigned"
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '/ftp')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_retail_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/basicPublishingCredentialsPolicies",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '/scm')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_retail_name'))]"
         ],
         "properties":{
            "allow":true
         }
      },
      {
         "type":"Microsoft.Web/sites/config",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '/web')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_retail_name'))]"
         ],
         "properties":{
            "numberOfWorkers":1,
            "defaultDocuments":[
               "Default.htm",
               "Default.html",
               "Default.asp",
               "index.htm",
               "index.html",
               "iisstart.htm",
               "default.aspx",
               "index.php",
               "hostingstart.html"
            ],
            "netFrameworkVersion":"v4.0",
            "linuxFxVersion":"PYTHON|3.7",
            "requestTracingEnabled":false,
            "remoteDebuggingEnabled":false,
            "remoteDebuggingVersion":"VS2017",
            "httpLoggingEnabled":true,
            "acrUseManagedIdentityCreds":false,
            "logsDirectorySizeLimit":35,
            "detailedErrorLoggingEnabled":false,
            "publishingUsername":"[concat('$',variables('sites_app_iotfoottraffic_sensor_retail_name'))]",
            "scmType":"None",
            "use32BitWorkerProcess":true,
            "webSocketsEnabled":false,
            "alwaysOn":true,
            "appCommandLine":"",
            "managedPipelineMode":"Integrated",
            "virtualApplications":[
               {
                  "virtualPath":"/",
                  "physicalPath":"site\\wwwroot",
                  "preloadEnabled":false
               }
            ],
            "loadBalancing":"LeastRequests",
            "experiments":{
               "rampUpRules":[
                  
               ]
            },
            "autoHealEnabled":false,
            "vnetRouteAllEnabled":false,
            "vnetPrivatePortsCount":0,
            "cors":{
               "allowedOrigins":[
                  "https://botservice.hosting.portal.azure.net",
                  "https://hosting.onecloud.azure-test.net/"
               ],
               "supportCredentials":false
            },
            "localMySqlEnabled":false,
            "ipSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictionsUseMain":false,
            "http20Enabled":false,
            "minTlsVersion":"1.2",
            "scmMinTlsVersion":"1.0",
            "ftpsState":"AllAllowed",
            "preWarmedInstanceCount":0,
            "functionAppScaleLimit":0,
            "functionsRuntimeScaleMonitoringEnabled":false,
            "minimumElasticInstanceCount":0,
            "azureStorageAccounts":{
               
            }
         }
      },
      {
         "type":"Microsoft.Web/sites/hostNameBindings",
         "apiVersion":"2021-02-01",
         "name":"[concat(variables('sites_app_iotfoottraffic_sensor_retail_name'), '/', variables('sites_app_iotfoottraffic_sensor_retail_name'), '.azurewebsites.net')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('sites_app_iotfoottraffic_sensor_retail_name'))]"
         ],
         "properties":{
            "siteName":"[variables('sites_app_iotfoottraffic_sensor_retail_name')]",
            "hostNameType":"Verified"
         }
      },
      {
         "name":"[variables('serverfarms_app_retaildemo_name')]",
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2019-08-01",
         "location":"[variables('location')]",
         "sku":{
            "name":"S1"
         },
         "kind":"linux",
         "properties":{
            "reserved":true
         }
      },
      {
         "type":"Microsoft.Web/sites",
         "apiVersion":"2018-11-01",
         "name":"[variables('app_retaildemo_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_retaildemo_name'))]"
         ],
         "kind":"app,linux",
         "properties":{
            "enabled":true,
            "hostNameSslStates":[
               {
                  "name":"[concat(variables('app_retaildemo_name'), '.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Standard"
               },
               {
                  "name":"[concat(variables('app_retaildemo_name'), '.scm.azurewebsites.net')]",
                  "sslState":"Disabled",
                  "hostType":"Repository"
               }
            ],
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_retaildemo_name'))]",
            "reserved":false,
            "isXenon":false,
            "hyperV":false,
            "siteConfig":{
               
            },
            "scmSiteAlsoStopped":false,
            "clientAffinityEnabled":true,
            "clientCertEnabled":false,
            "hostNamesDisabled":false,
            "containerSize":0,
            "dailyMemoryTimeQuota":0,
            "httpsOnly":true,
            "redundancyMode":"None"
         }
      },
      {
         "type":"Microsoft.Web/sites/config",
         "apiVersion":"2018-11-01",
         "name":"[concat(variables('app_retaildemo_name'), '/web')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/sites', variables('app_retaildemo_name'))]"
         ],
         "properties":{
            "numberOfWorkers":1,
            "defaultDocuments":[
               "Default.htm",
               "Default.html",
               "Default.asp",
               "index.htm",
               "index.html",
               "iisstart.htm",
               "default.aspx",
               "index.php",
               "hostingstart.html"
            ],
            "netFrameworkVersion":"v4.0",
            "linuxFxVersion":"DOTNETCORE|3.1",
            "requestTracingEnabled":false,
            "remoteDebuggingEnabled":false,
            "httpLoggingEnabled":false,
            "logsDirectorySizeLimit":35,
            "detailedErrorLoggingEnabled":false,
            "publishingUsername":"[concat('$', variables('app_retaildemo_name'))]",
            "azureStorageAccounts":{
               
            },
            "scmType":"None",
            "use32BitWorkerProcess":true,
            "webSocketsEnabled":false,
            "alwaysOn":true,
            "managedPipelineMode":"Integrated",
            "virtualApplications":[
               {
                  "virtualPath":"/",
                  "physicalPath":"site\\wwwroot",
                  "preloadEnabled":true
               }
            ],
            "loadBalancing":"LeastRequests",
            "experiments":{
               "rampUpRules":[
                  
               ]
            },
            "autoHealEnabled":false,
            "localMySqlEnabled":false,
			"cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                },
            "ipSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictions":[
               {
                  "ipAddress":"Any",
                  "action":"Allow",
                  "priority":1,
                  "name":"Allow all",
                  "description":"Allow all access"
               }
            ],
            "scmIpSecurityRestrictionsUseMain":false,
            "http20Enabled":false,
            "minTlsVersion":"1.2",
            "ftpsState":"AllAllowed",
            "reservedInstanceCount":0
         }
      },
      {
         "type":"Microsoft.Search/searchServices",
         "apiVersion":"2015-08-19",
         "name":"[variables('search_retail_qna_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"basic"
         },
         "properties":{
            "replicaCount":1,
            "partitionCount":1,
            "hostingMode":"Default"
         }
      },
      {
         "type":"Microsoft.Search/searchServices",
         "apiVersion":"2021-04-01-preview",
         "name":"[variables('search_srch_retail_name')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"standard"
         },
         "properties":{
            "replicaCount":1,
            "partitionCount":1,
            "hostingMode":"Default",
            "publicNetworkAccess":"Enabled",
            "networkRuleSet":{
               "ipRules":[
                  
               ],
               "bypass":"None"
            },
            "encryptionWithCmk":{
               "enforcement":"Unspecified"
            },
            "disableLocalAuth":false,
            "authOptions":{
               "apiKeyOnly":{
                  
               }
            },
            "disabledDataExfiltrationOptions":[
               
            ],
            "semanticSearch":"free"
         }
      },
      {
         "type":"Microsoft.Web/sites",
         "apiVersion":"2016-08-01",
         "name":"[variables('app_retail_qna_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('serverfarms_app_retail_qna_name'))]"
         ],
         "properties":{
            "enabled":true,
            "siteConfig":{
               "cors":{
                  "allowedOrigins":[
                     "*"
                  ]
               }
            },
            "name":"[variables('app_retail_qna_name')]",
            "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('serverfarms_app_retail_qna_name'))]",
            "hostingEnvironment":""
         },
         "resources":[
            {
               "type":"config",
               "apiVersion":"2015-08-01",
               "name":"appsettings",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/Sites', variables('app_retail_qna_name'))]",
                  "[resourceId('Microsoft.Search/searchServices/', variables('search_retail_qna_name'))]"
               ],
               "properties":{
                  "AzureSearchName":"[variables('search_retail_qna_name')]",
                  "AzureSearchAdminKey":"[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('search_retail_qna_name')), '2015-08-19').primaryKey]",
                  "PrimaryEndpointKey":"[concat(variables('app_retail_qna_name'), '-PrimaryEndpointKey')]",
                  "SecondaryEndpointKey":"[concat(variables('app_retail_qna_name'), '-SecondaryEndpointKey')]",
                  "DefaultAnswer":"No good match found in KB.",
                  "QNAMAKER_EXTENSION_VERSION":"latest"
               }
            }
         ]
      },
      {
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2016-09-01",
         "name":"[variables('serverfarms_app_retail_qna_name')]",
         "location":"[variables('location')]",
         "sku":{
            "Tier":"Standard",
            "Name":"S1"
         },
         "properties":{
            "name":"[variables('serverfarms_app_retail_qna_name')]",
            "workerSizeId":"0",
            "reserved":false,
            "numberOfWorkers":"1",
            "hostingEnvironment":""
         }
      },
      {
         "type":"Microsoft.VideoIndexer/accounts",
         "apiVersion":"2021-11-10-preview",
         "name":"[variables('accounts_RetailMedia_name')]",
         "location":"[variables('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.Media/mediaservices', variables('mediaservices_name'))]"
         ],
         "identity":{
            "type":"SystemAssigned"
         },
         "properties":{
            "mediaServices":{
               "resourceId":"[resourceId('Microsoft.Media/mediaservices', variables('mediaservices_name'))]"
            }
         }
      },
      {
         "name": "[variables('connections_azureblob_name')]",
         "type": "Microsoft.Web/connections",
         "apiVersion": "2016-06-01",
         "location": "[variables('location')]",
         "kind": "V1",
         "dependsOn": [
         "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]"
         ],
         "properties": {
         "displayName": "azureblob",
         "parameterValues": {
            "accountName": "[variables('storage_account_name')]",
            "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_name')),'2019-04-01').keys[0].value]"
         },
         "api": {
            "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', variables('location'), '/managedApis/azureblob')]"
         }
         }
      },
      {
         "name": "[variables('workflows_logic_storage_trigger_name')]",
         "type": "Microsoft.Logic/workflows",
         "apiVersion": "2017-07-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
         "[resourceId('Microsoft.Logic/workflows', variables('workflows_logic_video_indexer_trigger_name'))]"
         ],
         "properties": {
         "state": "Enabled",
         "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
               "$connections": {
               "defaultValue": {

               },
               "type": "Object"
               }
            },
            "triggers": {
               "manual": {
               "type": "Request",
               "kind": "Http",
               "inputs": {
                  "schema": {
                     "items": {
                     "properties": {
                        "data": {
                           "properties": {
                           "api": {
                              "type": "string"
                           },
                           "blobType": {
                              "type": "string"
                           },
                           "clientRequestId": {
                              "type": "string"
                           },
                           "contentLength": {
                              "type": "integer"
                           },
                           "contentType": {
                              "type": "string"
                           },
                           "eTag": {
                              "type": "string"
                           },
                           "requestId": {
                              "type": "string"
                           },
                           "sequencer": {
                              "type": "string"
                           },
                           "storageDiagnostics": {
                              "properties": {
                                 "batchId": {
                                 "type": "string"
                                 }
                              },
                              "type": "object"
                           },
                           "url": {
                              "type": "string"
                           }
                           },
                           "type": "object"
                        },
                        "dataVersion": {
                           "type": "string"
                        },
                        "eventTime": {
                           "type": "string"
                        },
                        "eventType": {
                           "type": "string"
                        },
                        "id": {
                           "type": "string"
                        },
                        "metadataVersion": {
                           "type": "string"
                        },
                        "subject": {
                           "type": "string"
                        },
                        "topic": {
                           "type": "string"
                        }
                     },
                     "required": [
                        "topic",
                        "subject",
                        "eventType",
                        "id",
                        "data",
                        "dataVersion",
                        "metadataVersion",
                        "eventTime"
                     ],
                     "type": "object"
                     },
                     "type": "array"
                  }
               }
               }
            },
            "actions": {
               "For_each": {
               "foreach": "@triggerBody()",
               "actions": {
                  "Create_SAS_URI_by_path": {
                     "runAfter": {

                     },
                     "type": "ApiConnection",
                     "inputs": {
                     "body": {
                        "Permissions": "Read"
                     },
                     "host": {
                        "connection": {
                           "name": "[concat('@parameters(''$connections'')','[''',variables('connections_azureblob_name'),'''][''connectionId'']')]"
                        }
                     },
                     "method": "post",
                     "path": "/datasets/default/CreateSharedLinkByPath",
                     "queries": {
                        "path": "@{substring(items('For_each')?['data']?['url'], indexof(items('For_each')?['data']?['url'], 'source-files'))}"
                     }
                     }
                  },
                  "HTTP": {
                     "runAfter": {
                     "Create_SAS_URI_by_path": [
                        "Succeeded"
                     ]
                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Content-Type\n": "multipart/form-data",
                        "Ocp-Apim-Subscription-Key\n": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "POST",
                     "queries": {
                        "accessToken": "@{body('Get_Video_Indexer_Token')}",
                        "accountId": "[parameters('video_indexer_account_id')]",
                        "callbackUrl": "[listCallbackURL(variables('logic_app_indexer_trigger_url'), '2019-05-01').value]",
                        "language": "English",
                        "location": "[variables('location')]",
                        "name": "@{substring(substring(items('For_each')?['data']?['url'], indexof(items('For_each')?['data']?['url'], 'source-files')), 13)}",
                        "privacy": "Public",
                        "videoUrl": "@{body('Create_SAS_URI_by_path')?['WebUrl']}"
                     },
                     "uri": "[concat('https://api.videoindexer.ai/trial/Accounts/',parameters('video_indexer_account_id'),'/Videos')]"
                     }
                  }
               },
               "runAfter": {
                  "Get_Video_Indexer_Token": [
                     "Succeeded"
                  ]
               },
               "type": "Foreach"
               },
               "Get_Video_Indexer_Token": {
               "runAfter": {

               },
               "type": "Http",
               "inputs": {
                  "headers": {
                     "Ocp-Apim-Subscription-Key": "[parameters('video_indexer_api_key')]"
                  },
                  "method": "GET",
                  "uri": "[concat('https://api.videoindexer.ai/Auth/trial/Accounts/',parameters('video_indexer_account_id'),'/AccessToken?allowEdit=true')]"
               }
               }
            },
            "outputs": {

            }
         },
         "parameters": {
            "$connections": {
               "value": {
               "[variables('connections_azureblob_name')]": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_azureblob_name'))]",
                  "connectionName": "[variables('connections_azureblob_name')]",
                  "id": "[concat('/subscriptions/',variables('subscriptionId'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/azureblob')]"
               }
               }
            }
         }
         }
      },
      {
         "name": "[variables('workflows_logic_video_indexer_trigger_name')]",
         "type": "Microsoft.Logic/workflows",
         "apiVersion": "2017-07-01",
         "location": "[variables('location')]",
         "dependsOn": [
         "[resourceId('Microsoft.Web/connections', variables('connections_cosmosdb_name'))]"
         ],
         "properties": {
         "state": "Enabled",
         "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
               "$connections": {
               "defaultValue": {

               },
               "type": "Object"
               }
            },
            "triggers": {
               "manual": {
               "type": "Request",
               "kind": "Http",
               "inputs": {
                  "method": "POST"
               }
               }
            },
            "actions": {
               "Condition": {
               "actions": {
                  "Create_or_update_document_(V2)": {
                     "runAfter": {
                     "Get_Video_Insights": [
                        "Succeeded"
                     ]
                     },
                     "type": "ApiConnection",
                     "inputs": {
                     "body": "@body('Get_Video_Insights')",
                     "host": {
                        "connection": {
                           "name": "[concat('@parameters(''$connections'')','[''',variables('connections_cosmosdb_name'),'''][''connectionId'']')]"
                        }
                     },
                     "method": "post",
                     "path": "/v3/dbs/@{encodeURIComponent('videoindexer')}/colls/@{encodeURIComponent('videoindexerinsights')}/docs"
                     }
                  },
                  "Get_Video_Indexer_Token": {
                     "runAfter": {

                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Ocp-Apim-Subscription-Key": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "GET",
                     "uri": "[concat('https://api.videoindexer.ai/Auth/trial/Accounts/',parameters('video_indexer_account_id'),'/AccessToken?allowEdit=true')]"
                     }
                  },
                  "Get_Video_Insights": {
                     "runAfter": {
                     "Get_Video_Indexer_Token": [
                        "Succeeded"
                     ]
                     },
                     "type": "Http",
                     "inputs": {
                     "headers": {
                        "Ocp-Apim-Subscription-Key\n": "[parameters('video_indexer_api_key')]"
                     },
                     "method": "GET",
                     "queries": {
                        "accessToken": "@{body('Get_Video_Indexer_Token')}"
                     },
                     "uri": "[variables('logic_app_concatfunc')]"
                     }
                  }
               },
               "runAfter": {

               },
               "expression": {
                  "and": [
                     {
                     "equals": [
                        "@triggerOutputs()['queries']['state']",
                        "Processed"
                     ]
                     }
                  ]
               },
               "type": "If"
               }
            },
            "outputs": {

            }
         },
         "parameters": {
            "$connections": {
               "value": {
               "[variables('connections_cosmosdb_name')]": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_cosmosdb_name'))]",
                  "connectionName": "[variables('connections_cosmosdb_name')]",
                  "id": "[concat('/subscriptions/',variables('subscriptionId'),'/providers/Microsoft.Web/locations/',variables('location'),'/managedApis/documentdb')]"
               }
               }
            }
         }
         }
      },
	     {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2021-11-01",
            "name": "[variables('namespaces_adx_thermostat_occupancy_name')]",
            "location":"[variables('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "disableLocalAuth": false,
                "zoneRedundant": true,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": true
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/RootManageSharedAccessKey')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 1,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/networkRuleSets",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/default')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "publicNetworkAccess": "Enabled",
                "defaultAction": "Allow",
                "virtualNetworkRules": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy/occupancy')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'occupancy')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat/thermostat')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'thermostat')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/occupancy/$Default')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'occupancy')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
            "apiVersion": "2021-11-01",
            "name": "[concat(variables('namespaces_adx_thermostat_occupancy_name'), '/thermostat/$Default')]",
            "location":"[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('namespaces_adx_thermostat_occupancy_name'), 'thermostat')]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('namespaces_adx_thermostat_occupancy_name'))]"
            ],
            "properties": {}
        },
		   {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2021-07-02",
            "name": "[variables('iothub_foottraffic')]",
            "location": "[variables('location')]",
           "sku":{
            "name":"S1",
            "tier":"Standard",
            "capacity":1
         },
         "properties":{
            "eventHubEndpoints":{
               "events":{
                  "retentionTimeInDays":1,
                  "partitionCount":4
               }
            },
            "features":"None"
         }
      },
      {
         "name":"[concat(variables('iothub_foottraffic'), '/events/asa-cg')]",
         "type":"Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
         "apiVersion":"2019-03-22",
         "dependsOn":[
            "[resourceId('Microsoft.Devices/IotHubs', variables('iothub_foottraffic'))]"
         ]
      },
	  {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "name": "[variables('func_livestreaming_video_analytics_asp_name')]",
             "location": "[variables('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
	  {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[variables('func_livestreaming_video_analytics_name')]",
             "location": "[variables('location')]",
            "kind": "functionapp",
			 "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('func_livestreaming_video_analytics_asp_name'))]"
            ],
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('func_livestreaming_video_analytics_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('func_livestreaming_video_analytics_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                 "serverFarmId": "[resourceId(variables('resource_group_name'), 'Microsoft.Web/serverfarms', variables('func_livestreaming_video_analytics_asp_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
					"appSettings": [
								{
								"name": "PowerbiStreamingUrl",
								"value": "[parameters('livestreaming_video_analytics_Realtime_URL')]"
								},
								{
									"name": "FUNCTIONS_EXTENSION_VERSION",
									"value": "~2"
									},
								{
									"name": "FUNCTIONS_WORKER_RUNTIME",
									"value": "dotnet"
								}
			   ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "B10DC0753E56AF5562749748B185627EB8773B3C5160FA954F891FDBF5E7D19A",
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('func_livestreaming_video_analytics_name'), '/ftp')]",
 "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('func_livestreaming_video_analytics_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('func_livestreaming_video_analytics_name'), '/scm')]",
             "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('func_livestreaming_video_analytics_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('func_livestreaming_video_analytics_name'), '/web')]",
             "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('func_livestreaming_video_analytics_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v6.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$',variables('func_livestreaming_video_analytics_name'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "cors": {
                    "allowedOrigins": [
                        "https://portal.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('func_livestreaming_video_analytics_name'), '/', variables('func_livestreaming_video_analytics_name'), '.azurewebsites.net')]",
             "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('func_livestreaming_video_analytics_name'))]"
            ],
            "properties": {
                "siteName": "[variables('func_livestreaming_video_analytics_name')]",
                "hostNameType": "Verified"
            }
        },
		 {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "name": "[variables('func_product_search_asp_name')]",
             "location": "[variables('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
		 {
          "name":"[variables('serverfarm_product_search_ui_app_name')]",
          "type":"Microsoft.Web/serverfarms",
          "apiVersion":"2019-08-01",
          "kind":"app",
          "location":"[variables('location')]",
          "properties":{
             "name":"[variables('serverfarm_product_search_ui_app_name')]"
          },
          "sku":{
             "name":"S1"
          }
       },
       {
          "name":"[variables('sites_product_search_ui_app_name')]",
          "type":"Microsoft.Web/sites",
          "apiVersion":"2021-03-01",
          "kind":"app",
          "location":"[variables('location')]",
          "dependsOn":[
             "[concat('Microsoft.Web/serverfarms/', toLower(variables('serverfarm_product_search_ui_app_name')))]"
          ],
          "properties":{
             "enabled":true,
             "hostNameSslStates":[
                {
                   "name":"[concat(variables('sites_product_search_ui_app_name'), '.azurewebsites.net')]",
                   "sslState":"Disabled",
                   "hostType":"Standard"
                },
                {
                   "name":"[concat(variables('sites_product_search_ui_app_name'), '.scm.azurewebsites.net')]",
                   "sslState":"Disabled",
                   "hostType":"Repository"
                }
             ],
             "serverFarmId":"[resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms', variables('serverfarm_product_search_ui_app_name'))]",
             "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "A4AE5B4D8DF5A1171AD5FE6A3AC1C147AA8BE402EDA35DC9661253EEB2078009",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
          }
       },
	    {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-03-01",
            "name": "[concat(variables('sites_product_search_ui_app_name'), '/web')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('sites_product_search_ui_app_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$',variables('sites_product_search_ui_app_name'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0
            }
        }
   ],
   "outputs":{
      
   }
}
